name: Release Worker

on:
  workflow_dispatch:
    inputs:
      build-zoo-handler:
        description: 'Build Zoo Handler Payload'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - uses: jfrog/setup-jfrog-cli@v3
      env:
        JF_URL: 'https://repo.spring.io'
        JF_ENV_SPRING: ${{ secrets.JF_ARTIFACTORY_SPRING }}
    - uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-m2-

    # target deploy repos
    - name: Configure JFrog Cli
      run: |
        jfrog rt mvnc --use-wrapper \
          --server-id-resolve=${{ vars.JF_SERVER_ID }} \
          --server-id-deploy=${{ vars.JF_SERVER_ID }} \
          --repo-resolve-releases=libs-release-staging \
          --repo-resolve-snapshots=libs-snapshot \
          --repo-deploy-releases=libs-staging-local \
          --repo-deploy-snapshots=libs-snapshot-local
        echo JFROG_CLI_BUILD_NAME=spring-cloud-dataflow-ui-main-release >> $GITHUB_ENV
        echo JFROG_CLI_BUILD_NUMBER=$GITHUB_RUN_NUMBER >> $GITHUB_ENV

    # zoo extract and ensure
    - name: Extract Zoo Context Properties
      uses: jvalkeal/build-zoo-handler@v0.0.4
      with:
        dispatch-handler-extract-context-properties: true

    # build and publish to configured target
    - name: Build and Publish
      run: |
        jfrog mvn build-helper:parse-version versions:set \
          -gs .github/settings.xml \
          -Pstagingrelease \
          -DprocessAllModules=true \
          -DgenerateBackupPoms=false \
          -Dartifactory.publish.artifacts=false \
          -DnewVersion='${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}' \
          -B
        echo BUILD_ZOO_HANDLER_spring_cloud_dataflow_ui_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout) >> $GITHUB_ENV
        jfrog rt build-clean
        jfrog mvn clean install \
          -gs .github/settings.xml \
          -Pstagingrelease \
          -DskipTests -U -B
        jfrog rt build-publish
        echo BUILD_ZOO_HANDLER_spring_cloud_dataflow_ui_buildname=spring-cloud-dataflow-ui-main-release >> $GITHUB_ENV
        echo BUILD_ZOO_HANDLER_spring_cloud_dataflow_ui_buildnumber=$GITHUB_RUN_NUMBER >> $GITHUB_ENV

    # zoo tag
    - name: Tag Release
      uses: jvalkeal/build-zoo-handler@v0.0.4
      with:
        tag-release-branch: ${{ env.BUILD_ZOO_HANDLER_spring_cloud_dataflow_ui_version }}
        tag-release-tag: ${{ env.BUILD_ZOO_HANDLER_spring_cloud_dataflow_ui_version }}
        tag-release-tag-prefix: v

    # zoo success
    - name: Notify Build Success Zoo Handler Controller
      uses: jvalkeal/build-zoo-handler@v0.0.4
      with:
        dispatch-handler-token: ${{ secrets.SCDF_ACCESS_TOKEN }}
        dispatch-handler-client-payload-data: >
          {
            "event": "build-succeed"
          }

    # zoo failure
    - name: Notify Build Failure Zoo Handler Controller
      if: ${{ failure() }}
      uses: jvalkeal/build-zoo-handler@v0.0.4
      with:
        dispatch-handler-token: ${{ secrets.SCDF_ACCESS_TOKEN }}
        dispatch-handler-client-payload-data: >
          {
            "event": "build-failed",
            "message": "spring-cloud-dataflow-ui failed"
          }
    # clean m2 cache
    - name: Clean cache
      run: |
        find ~/.m2/repository -type d -name '*SNAPSHOT' | xargs rm -fr
